# A docker-compose must always start by the version tag.
# We use '3' because it's the last version at this time.
version: '3'

# You should know that docker-composes works with services.
# 1 service = 1 container.
# For example, a service maybe, a server, a client, a database...
# We use the keyword 'services' to start to create services.
services:
  # As we said at the beginning, we want to create: a server and a client.
  # That is two services.

  # First service (container): the database.
  # Here you are free to choose the keyword.
  # It will allow you to define what the service corresponds to.
  # We use the keyword 'db' for the database.
  
  # Second service (container): the backend.
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile

    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

    ports:
      - '8000:8000'

    volumes:
      - ./backend:/app/backend

    # depends_on:
    #   - db

    # Third service (container): frontend

  db:
    build:
      context: ./database
      dockerfile: postgres.Dockerfile
      ''
    ports:
      - '5432:5432'

    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

    volumes:
      - ./data/db:/var/lib/postgresql/data/

    depends_on:
      - backend


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile

    ports:
      - '3000:3000'

    volumes:
      - ./frontend:/app/frontend

    depends_on:
      - backend