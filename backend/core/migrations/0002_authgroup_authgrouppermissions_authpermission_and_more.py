# Generated by Django 4.2.7 on 2023-12-07 16:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('senderid', models.IntegerField(db_column='senderId')),
                ('istipcreator', models.BooleanField(db_column='isTipCreator')),
                ('datetime', models.DateTimeField(db_column='dateTime')),
                ('text', models.CharField()),
            ],
            options={
                'db_table': 'Comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Emotion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField()),
            ],
            options={
                'db_table': 'Emotion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField()),
                ('last_name', models.IntegerField()),
                ('email', models.CharField()),
                ('points', models.IntegerField()),
                ('password', models.CharField()),
                ('specializationfield', models.CharField(blank=True, db_column='specializationField', null=True)),
                ('professional_id', models.IntegerField(blank=True, null=True)),
                ('phonenumber', models.IntegerField(blank=True, db_column='phoneNumber', null=True)),
                ('isadmin', models.BooleanField(blank=True, db_column='isAdmin', null=True)),
            ],
            options={
                'db_table': 'Person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Selection',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(db_column='dateTime')),
                ('has_helped', models.BooleanField(db_column='hasHelped')),
            ],
            options={
                'db_table': 'Selection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('duedate', models.DateField(db_column='dueDate')),
                ('completed', models.BooleanField()),
            ],
            options={
                'db_table': 'Task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tip',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField()),
                ('description', models.TextField()),
                ('points', models.IntegerField()),
                ('state', models.CharField()),
                ('buildingnumber', models.IntegerField(blank=True, db_column='buildingNumber', null=True)),
                ('complement', models.CharField()),
                ('country', models.CharField()),
                ('validated', models.BooleanField()),
            ],
            options={
                'db_table': 'Tip',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='address',
            options={'managed': False},
        ),
        migrations.CreateModel(
            name='EmotionTip',
            fields=[
                ('emotion_id', models.OneToOneField(db_column='Emotion_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.emotion')),
            ],
            options={
                'db_table': 'Emotion_Tip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonEmotion',
            fields=[
                ('person_id', models.OneToOneField(db_column='Person_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.person')),
            ],
            options={
                'db_table': 'Person_Emotion',
                'managed': False,
            },
        ),
    ]
